<?xml version='1.0' encoding='UTF-8'?>
<com.tikal.jenkins.plugins.multijob.MultiJobProject plugin="jenkins-multijob-plugin@1.16">
  <actions/>
  <description>I&apos;m the {feature_branch} branch wrapper job for all jobs of this branch</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.1">
      <useBuildBlocker>true</useBuildBlocker>
      <blockLevel>UNDEFINED</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs>{feature_branch}MultiJob</blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.com:mulesoft-web/ProgrammableWeb</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/{feature_branch}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/2 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
source /var/lib/jenkins/JobScripts/util_functions.sh
source /var/lib/jenkins/JobScripts/create_container_html.sh
source /var/lib/jenkins/JobScripts/git_functions.sh
source /var/lib/jenkins/JobScripts/docker_functions.sh
source /var/lib/jenkins/JobScripts/git_functions_new.sh
source /var/lib/jenkins/JobScripts/jenkins.properties

HOST_SSH_PORT=4940

BRANCH_NAME={feature_branch}

SERVER_NAME={feature_branch}

echo &quot;Launching Instances..&quot;
instance_id=`python ~/JobScripts/manage_instance.py &apos;launch_instance(&quot;&apos;&quot;$SERVER_NAME&quot;&apos;&quot;,&quot;&apos;&quot;$IMAGE&quot;&apos;&quot;,&quot;&apos;&quot;$SIZE&quot;&apos;&quot;,&quot;&apos;&quot;$ENDPOINT&quot;&apos;&quot;,&quot;&apos;&quot;$TOKEN&quot;&apos;&quot;,&quot;&apos;&quot;$REGION&quot;&apos;&quot;,&quot;&apos;&quot;$SSH_ID&quot;&apos;&quot;)&apos;`

sleep 3m

echo &quot;Get server ip&quot;
server_ip=`python ~/JobScripts/manage_instance.py &apos;get_server_ip(&quot;&apos;&quot;$ENDPOINT&quot;&apos;&quot;,&quot;&apos;&quot;$TOKEN&quot;&apos;&quot;,&quot;&apos;&quot;$instance_id&quot;&apos;&quot;)&apos;`


echo &quot;$instance_id $server_ip $BRANCH_NAME&quot; &gt;&gt; ${JENKINS_HOME}/portlookup/server_info

echo &quot;install docker..&quot;
install_docker ${server_ip}


echo &quot;Copy Docker image..&quot;
copy_docker_image ${JENKINS_HOME} {feature_branch} ${server_ip}

sleep 3m

echo &quot;Creating container..&quot;
create_container_at_server &quot;${BRANCH_NAME}&quot; 4940 22 5901 5901 8292 80 ${server_ip}

sleep 3m

ssh root@${server_ip} -p ${HOST_SSH_PORT} &quot;rm -rf /usr/share/nginx/www/ProgrammableWeb&quot;

echo &quot;Copying code.&quot;;
copy_git_project ${server_ip} ${HOST_SSH_PORT} ${WORKSPACE}

echo &quot;Linking to files and settings already present on the container.&quot;;
ssh root@${server_ip} -p ${HOST_SSH_PORT} &quot;ln -s /data/files /usr/share/nginx/www/ProgrammableWeb/sites/default/files&quot;;
ssh root@${server_ip} -p ${HOST_SSH_PORT} &quot;chown -R www-data /usr/share/nginx/www/ProgrammableWeb/sites/default/files&quot;;
ssh root@${server_ip} -p ${HOST_SSH_PORT} &quot;ln -s /data/settings.php /usr/share/nginx/www/ProgrammableWeb/sites/default/settings.php&quot;;

change_settings ${server_ip} ${HOST_SSH_PORT} 

copy_setting_files ${server_ip} ${HOST_SSH_PORT} ${JENKINS_HOME}

ssh root@${server_ip} -p ${HOST_SSH_PORT} &quot;service php5-fpm restart&quot;
ssh root@${server_ip} -p ${HOST_SSH_PORT} &quot;service nginx restart&quot;

ssh root@${server_ip} -p ${HOST_SSH_PORT} &quot;cd /usr/share/nginx/www/ProgrammableWeb/sites &amp;&amp; drush cc all&quot;

ssh root@${server_ip} -p ${HOST_SSH_PORT} &quot;cd /usr/share/nginx/www/ProgrammableWeb/tests &amp;&amp; rm -rf vendor&quot;

ssh root@${server_ip} -p ${HOST_SSH_PORT} &quot;cd /usr/share/nginx/www/ProgrammableWeb/tests &amp;&amp; php composer.phar self-update&quot;

ssh root@${server_ip} -p ${HOST_SSH_PORT} &quot;cd /usr/share/nginx/www/ProgrammableWeb/tests &amp;&amp; php composer.phar update&quot;

get_committers_email {feature_branch} ${BUILD_ID}

#echo &quot;SSH=${HOST_SSH_PORT}&quot; &gt; /var/lib/jenkins/jobs/prodMultiJob/env.properties
echo &quot;server_ip=${server_ip}&quot;  &gt; /var/lib/jenkins/jobs/{feature_branch}MultiJob/env.properties
</command>
    </hudson.tasks.Shell>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>First level Code Checks</phaseName>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>{feature_branch}UnitTest</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition></condition>
          <configs>
            <hudson.plugins.parameterizedtrigger.FileBuildParameters plugin="parameterized-trigger@2.28">
              <propertiesFile>/var/lib/jenkins/jobs/{feature_branch}MultiJob/env.properties</propertiesFile>
              <failTriggerOnMissing>false</failTriggerOnMissing>
              <useMatrixChild>false</useMatrixChild>
              <onlyExactRuns>false</onlyExactRuns>
            </hudson.plugins.parameterizedtrigger.FileBuildParameters>
          </configs>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>{feature_branch}StaticCodeAnalysis</jobName>
          <currParams>true</currParams>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath></parsingRulesPath>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>false</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition></condition>
          <configs>
            <hudson.plugins.parameterizedtrigger.FileBuildParameters plugin="parameterized-trigger@2.28">
              <propertiesFile>/var/lib/jenkins/jobs/{feature_branch}MultiJob/env.properties</propertiesFile>
              <failTriggerOnMissing>false</failTriggerOnMissing>
              <useMatrixChild>false</useMatrixChild>
              <onlyExactRuns>false</onlyExactRuns>
            </hudson.plugins.parameterizedtrigger.FileBuildParameters>
          </configs>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
      <continuationCondition>ALWAYS</continuationCondition>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
  </builders>
  <publishers/>
  <buildWrappers/>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>
